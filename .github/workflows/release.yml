name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      PLATFORMS: linux/amd64,linux/arm64,linux/arm/v7

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.3

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            latest
          labels: |
            maintainer=UnAfraid
            org.opencontainers.image.vendor=UnAfraid
            org.opencontainers.image.documentation=https://github.com/UnAfraid/wg-ui

      - name: Build Frontend
        run: |
          LATEST_FRONTEND_TAG=$(curl -sS "https://api.github.com/repos/desislavsd/wireguard-manager/releases/latest" | jq -r ".tag_name")
          cd api/tools/frontend
          echo "Cloning version ${LATEST_FRONTEND_TAG}"
          git clone --depth 1 -b "${LATEST_FRONTEND_TAG}" https://github.com/desislavsd/wireguard-manager
          npm install -g pnpm@7
          cd wireguard-manager
          pnpm install
          npm run generate
          cd ..
          rm -rf app
          mv wireguard-manager/.output/public app
          rm -rf wireguard-manager

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --skip-validate
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Build and push image to GHCR
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
